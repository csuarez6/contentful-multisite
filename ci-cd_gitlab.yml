image: node:16

stages:
  - Test
  - Deploy
  - Stop

.only changes:
  only:
    changes: &changes
      - pages/**/*
      - src/**/*
      - styles/**/*
      - public/**/*
      - "*.json"
      - "*.js"
      - "*.ts"
      - "*.yaml"
      - .gitlab-ci.yml
      - .gitlab/**/*

Test_Linter:
  stage: Test
  before_script:
    - yarn install
  script:
    - yarn lint
  only:
    refs:
      - main
      - merge_requests
    changes: *changes
  except:
    - tags

Deploy_To_QA:
  stage: Deploy
  variables:
    VERCEL_SCOPE: $VERCEL_SCOPE
    VERCEL_ORG_ID: $VERCEL_ORG_ID
    VERCEL_PROJECT_ID: $VERCEL_PROJECT_ID
    VERCEL_TOKEN: $VERCEL_TOKEN
  before_script:
    - npm i -g vercel
    - |
      if [[ $CI_ENVIRONMENT_URL ]]; then VERCEL_ORG_ID=$VERCEL_ORG_ID VERCEL_PROJECT_ID=$VERCEL_PROJECT_ID vercel remove $CI_ENVIRONMENT_URL --token $VERCEL_TOKEN --scope $VERCEL_SCOPE --yes > /dev/null 2>&1; else echo "No env url, skipping"; fi;
  script:
    - DEPLOYMENT_URL=$(VERCEL_ORG_ID=$VERCEL_ORG_ID VERCEL_PROJECT_ID=$VERCEL_PROJECT_ID vercel --yes --token $VERCEL_TOKEN --scope $VERCEL_SCOPE)
    - echo "DEPLOYMENT_URL=$DEPLOYMENT_URL" > deploy.env
  artifacts:
    reports:
      dotenv: deploy.env 
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: $DEPLOYMENT_URL
    on_stop: Stop_QA_Deployment
  when: manual
  only:
    refs:
      - merge_requests
    changes: *changes
  needs: ["Test_Linter"]

Deploy_To_Sandbox:
  stage: Deploy
  variables:
    PREVIEW_URL: $VERCEL_PROJECT_NAME-sandbox.vercel.app
    CF_TOKEN_DELIVERY: $CONTENTFUL_DELIVERY_API_TOKEN_SANDBOX
    CF_TOKEN_PREVIEW: $CONTENTFUL_PREVIEW_API_TOKEN_SANDBOX
    VERCEL_SCOPE: $VERCEL_SCOPE
    VERCEL_ORG_ID: $VERCEL_ORG_ID
    VERCEL_PROJECT_ID: $VERCEL_PROJECT_ID
    VERCEL_TOKEN: $VERCEL_TOKEN
  before_script:
    - npm i -g vercel
  script:
    - |
      DEPLOYMENT_URL=$(\
      VERCEL_ORG_ID=$VERCEL_ORG_ID \
      VERCEL_PROJECT_ID=$VERCEL_PROJECT_ID \
      vercel --yes --token $VERCEL_TOKEN --scope $VERCEL_SCOPE \
      --build-env CONTENTFUL_ENVIRONMENT=sandbox \
      --build-env CONTENTFUL_DELIVERY_API_TOKEN=$CF_TOKEN_DELIVERY \
      --build-env CONTENTFUL_PREVIEW_API_TOKEN=$CF_TOKEN_PREVIEW \
      --env CONTENTFUL_ENVIRONMENT=sandbox \
      --env CONTENTFUL_DELIVERY_API_TOKEN=$CF_TOKEN_DELIVERY \
      --env CONTENTFUL_PREVIEW_API_TOKEN=$CF_TOKEN_PREVIEW \
      )
    - vercel alias set $DEPLOYMENT_URL $PREVIEW_URL -t $VERCEL_TOKEN --scope $VERCEL_SCOPE
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$VERCEL_PROJECT_NAME-sandbox.vercel.app
  when: manual
  only:
    refs:
      - merge_requests
    variables:
      - $CI_COMMIT_REF_NAME =~ /sandbox/
    changes: *changes
  needs: ["Test_Linter"]

Stop_QA_Deployment:
  stage: Stop
  variables:
    PREVIEW_DEV_URL: $VERCEL_PROJECT_NAME-qa.$VERCEL_SCOPE.vercel.app
    VERCEL_ORG_ID: $VERCEL_ORG_ID
    VERCEL_PROJECT_ID: $VERCEL_PROJECT_ID
    VERCEL_TOKEN: $VERCEL_TOKEN
    VERCEL_SCOPE: $VERCEL_SCOPE
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  before_script:
    - npm i -g vercel
  script:
    - |
      if [[ $CI_ENVIRONMENT_URL ]]; then VERCEL_ORG_ID=$VERCEL_ORG_ID VERCEL_PROJECT_ID=$VERCEL_PROJECT_ID vercel remove $CI_ENVIRONMENT_URL --token $VERCEL_TOKEN --scope $VERCEL_SCOPE --yes > /dev/null 2>&1; else echo "No env url, skipping"; fi;
  only:
    refs:
      - merge_requests
    changes: *changes
  except:
    - main
    - tags
  needs: ["Deploy_To_QA"]

Deploy_Production_APP:
  stage: Deploy
  variables:
    VERCEL_SCOPE: $VERCEL_SCOPE
    VERCEL_ORG_ID: $VERCEL_ORG_ID
    VERCEL_PROJECT_ID: $VERCEL_PROJECT_ID
    VERCEL_TOKEN: $VERCEL_TOKEN
  before_script:
    - npm i -g vercel
  script:
    - VERCEL_ORG_ID=$VERCEL_ORG_ID VERCEL_PROJECT_ID=$VERCEL_PROJECT_ID vercel --prod --token $VERCEL_TOKEN --scope $VERCEL_SCOPE
  # after_script:
  #   - ./etc/slack/notificationStack.sh -v
  environment:
    name: Production
    url: https://vanti.aplyca.com
  when: on_success
  only:
    refs:
      - main
    changes: *changes
  except:
    - merge_requests
    - tags
  needs: ["Test_Linter"]

pages:
  stage: Deploy
  variables:
    STORYBOOK_PREVIEW_URL: 'https://grupovanti.gitlab.io/Marketplace/web-commerce/main'
  cache:
    key: 'sp-storybook'
    paths:
      - public
  artifacts:
    paths:
      - public
  before_script: 
    - yarn install
    - yarn build-storybook
  script:
    - rm -rf "public/main"
    - mkdir -p "public/main"
    - echo "<!DOCTYPE html><script>window.location.href = '$STORYBOOK_PREVIEW_URL';</script>" > public/index.html
    - mv storybook-static/* "public/main/"
    - rm -rf "public/main/main"

  environment:
    name: Storybook
    url: https://grupovanti.gitlab.io/Marketplace/web-commerce/main/
  when: manual
  only:
    refs:
      - main
    changes: *changes
  except:
    - merge_requests
    - tags
  needs: ["Test_Linter"]
